{"version":3,"sources":["./src/app/login-register/login-register-routing.module.ts","./src/app/login-register/login-register.module.ts","./src/app/login-register/login/login.component.ts","./src/app/login-register/login/login.component.html"],"names":[],"mappings":"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","file":"login-register-login-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { LoginRegisterRoutingModule } from './login-register-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRegisterRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginRegisterModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  signinupform: FormGroup;\n  emailPattern = '^[a-zA-Z0-9.!#$%&*+/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$';\n  passwordPattern = '^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$';\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  get signinupFormValues() {\n    return this.signinupform.controls;\n  }\n\n  ngOnInit(): void {\n    this.signinupform = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      password: new FormControl('', [Validators.required, Validators.pattern(this.passwordPattern)])\n    });\n  }\n\n  signInUpMethod(type: string) {\n    this.authService.disableFlag = true;\n    this.signinupFormValues.email.markAllAsTouched();\n    this.signinupFormValues.password.markAllAsTouched();\n    if (!this.signinupFormValues.email.invalid && !this.signinupFormValues.password.invalid) {\n      if (type === 'SIGNIN') {\n        this.authService.SignIn(\n          this.signinupFormValues.email.value.toString(),\n          this.signinupFormValues.password.value.toString()\n        );\n      } else {\n        this.authService.SignUp(\n          this.signinupFormValues.email.value.toString(),\n          this.signinupFormValues.password.value.toString()\n        );\n      }\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"form-signin text-center\">\n        <form [formGroup]=\"signinupform\">\n            <img class=\"mt-4\" src=\"../../../assets/water-icon.png\" alt=\"\" width=\"100\">\n            <h1 class=\"h3 mb-3 fw-normal\">WRI_Wave2WebHack</h1>\n\n            <p class=\"fw-bold\">Sign in/up</p>\n      \n            <div class=\"form-floating\">\n                <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"\n                    [ngClass]=\"{'invalid-class': signinupFormValues.email.errors && signinupFormValues.email.touched}\"\n                    placeholder=\"name@example.com\">\n                <label for=\"floatingInput\">Email address</label>\n            </div>\n            <div *ngIf=\"signinupFormValues.email.errors && signinupFormValues.email.touched\" \n                class=\"invalid-field\">\n                <div *ngIf=\"signinupFormValues.email.errors.required\">\n                    Email address is required.\n                </div>\n                <div *ngIf=\"signinupFormValues.email.errors.pattern\">\n                    Email address is invalid.\n                </div>\n            </div>\n            <div class=\"form-floating\">\n                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"\n                    [ngClass]=\"{'invalid-class': signinupFormValues.password.errors && signinupFormValues.password.touched}\"\n                    placeholder=\"Password\">\n                <label for=\"floatingPassword\">Password</label>\n            </div>\n            <div *ngIf=\"signinupFormValues.password.errors && signinupFormValues.password.touched\" \n                class=\"invalid-field\">\n                <div *ngIf=\"signinupFormValues.password.errors.required\">\n                    Password is required.\n                </div>\n                <div *ngIf=\"signinupFormValues.password.errors.pattern\">\n                    Password should match contain at least one capital letter, one number and one special character.\n                </div>\n            </div>\n            <br>\n            <button class=\"w-100 btn btn-primary\" [disabled]=\"authService.disableFlag\" (click)=\"signInUpMethod('SIGNIN')\">Sign in</button>\n            <hr>\n            <button class=\"w-100 btn btn-primary\" [disabled]=\"authService.disableFlag\" (click)=\"signInUpMethod('SIGNUP')\">Sign up</button>\n        </form>\n        <p class=\"mt-3 text-muted\">Socials</p>\n        <div class=\"btn-group\">\n            <a class=\"icon-button facebook\"><i class=\"fa fa-facebook\"></i><span></span></a>\n            <a class=\"icon-button twitter\"><i class=\"fa fa-twitter\"></i><span></span></a>\n            <a class=\"icon-button google\" (click)=\"authService.GoogleAuth()\"><i class=\"fa fa-google\"></i><span></span></a>\n            <a class=\"icon-button linkedin\"><i class=\"fa fa-linkedin\"></i><span></span></a>\n            <a class=\"icon-button instagram\"><i class=\"fa fa-instagram\"></i><span></span></a>\n        </div>\n        <p class=\"mt-2 mb-3 text-muted\">Â© 2021</p>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}