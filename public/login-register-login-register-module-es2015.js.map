{"version":3,"sources":["./src/app/login-register/login-register-routing.module.ts","./src/app/login-register/login-register.module.ts","./src/app/login-register/login/login.component.ts","./src/app/login-register/login/login.component.html"],"names":[],"mappings":"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","file":"login-register-login-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRegisterRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginRegisterRoutingModule } from './login-register-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRegisterRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class LoginRegisterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  signinupform: FormGroup;\r\n  emailPattern = '^[a-zA-Z0-9.!#$%&*+/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$';\r\n  passwordPattern = '^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$';\r\n\r\n  constructor(\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  get signinupFormValues() {\r\n    return this.signinupform.controls;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.signinupform = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.pattern(this.emailPattern)]),\r\n      password: new FormControl('', [Validators.required, Validators.pattern(this.passwordPattern)])\r\n    });\r\n  }\r\n\r\n  signInUpMethod(type: string) {\r\n    this.authService.disableFlag = true;\r\n    this.signinupFormValues.email.markAllAsTouched();\r\n    this.signinupFormValues.password.markAllAsTouched();\r\n    if (!this.signinupFormValues.email.invalid && !this.signinupFormValues.password.invalid) {\r\n      if (type === 'SIGNIN') {\r\n        this.authService.SignIn(\r\n          this.signinupFormValues.email.value.toString(),\r\n          this.signinupFormValues.password.value.toString()\r\n        );\r\n      } else {\r\n        this.authService.SignUp(\r\n          this.signinupFormValues.email.value.toString(),\r\n          this.signinupFormValues.password.value.toString()\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"form-signin text-center\">\r\n        <form [formGroup]=\"signinupform\">\r\n            <img class=\"mb-2\" style=\"margin-top: 65px;\" src=\"../../../assets/team_icon.png\" alt=\"\" width=\"150\">\r\n            <h1 class=\"h3 mb-3 fw-normal\">The_Atlantians</h1>\r\n\r\n            <p class=\"fw-bold\">Sign in/up</p>\r\n      \r\n            <div class=\"form-floating\">\r\n                <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"\r\n                    [ngClass]=\"{'invalid-class': signinupFormValues.email.errors && signinupFormValues.email.touched}\"\r\n                    placeholder=\"name@example.com\">\r\n                <label for=\"floatingInput\">Email address</label>\r\n            </div>\r\n            <div *ngIf=\"signinupFormValues.email.errors && signinupFormValues.email.touched\" \r\n                class=\"invalid-field\">\r\n                <div *ngIf=\"signinupFormValues.email.errors.required\">\r\n                    Email address is required.\r\n                </div>\r\n                <div *ngIf=\"signinupFormValues.email.errors.pattern\">\r\n                    Email address is invalid.\r\n                </div>\r\n            </div>\r\n            <div class=\"form-floating\">\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"\r\n                    [ngClass]=\"{'invalid-class': signinupFormValues.password.errors && signinupFormValues.password.touched}\"\r\n                    placeholder=\"Password\">\r\n                <label for=\"floatingPassword\">Password</label>\r\n            </div>\r\n            <div *ngIf=\"signinupFormValues.password.errors && signinupFormValues.password.touched\" \r\n                class=\"invalid-field\">\r\n                <div *ngIf=\"signinupFormValues.password.errors.required\">\r\n                    Password is required.\r\n                </div>\r\n                <div *ngIf=\"signinupFormValues.password.errors.pattern\">\r\n                    Password should match contain at least one capital letter, one number and one special character.\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <button class=\"w-100 btn btn-primary\" [disabled]=\"authService.disableFlag\" (click)=\"signInUpMethod('SIGNIN')\">Sign in</button>\r\n            <hr>\r\n            <button class=\"w-100 btn btn-primary\" [disabled]=\"authService.disableFlag\" (click)=\"signInUpMethod('SIGNUP')\">Sign up</button>\r\n        </form>\r\n        <p class=\"mt-3 text-muted\">Socials</p>\r\n        <div class=\"btn-group\">\r\n            <a class=\"icon-button facebook\"><i class=\"fa fa-facebook\"></i><span></span></a>\r\n            <a class=\"icon-button twitter\"><i class=\"fa fa-twitter\"></i><span></span></a>\r\n            <a class=\"icon-button google\" (click)=\"authService.GoogleAuth()\"><i class=\"fa fa-google\"></i><span></span></a>\r\n            <a class=\"icon-button linkedin\"><i class=\"fa fa-linkedin\"></i><span></span></a>\r\n            <a class=\"icon-button instagram\"><i class=\"fa fa-instagram\"></i><span></span></a>\r\n        </div>\r\n        <p class=\"mt-2 mb-3 text-muted\">Â© 2021</p>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}