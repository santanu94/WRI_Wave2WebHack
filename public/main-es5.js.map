{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login-register/services/auth.service.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/side-section/side-section.component.ts","webpack:///src/app/shared/components/side-section/side-section.component.html","webpack:///src/app/shared/services/auth.guard.ts","webpack:///src/app/shared/services/shared.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","canActivate","loadChildren","m","PredictionModule","LoginRegisterModule","AppRoutingModule","forRoot","imports","AppComponent","authService","router","title","isLoggedIn","navigate","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AuthService","afs","afAuth","ngZone","disableFlag","authState","subscribe","user","userData","console","log","email","displayName","localStorage","setItem","JSON","stringify","parse","getItem","password","signInWithEmailAndPassword","result","run","SetUserData","error","window","alert","message","createUserWithEmailAndPassword","AuthLogin","auth","GoogleAuthProvider","provider","signInWithPopup","userRef","doc","uid","set","merge","signOut","removeItem","providedIn","FooterComponent","HeaderComponent","sharedService","yearList","getYearlist","response","yearlist","yearSubject","next","dataPopulationSubject","dailyDisplaynSeasonalSubject","SideSectionComponent","regionList","getRegionList","selectedRegion","regionName","value","regionSubject","AuthGuard","state","SharedService","httpClient","selectedYear","cumulativeInflowArray","inflowArray","outflowArray","storageArray","durationArray","datesArray","borderColorArray","backgroundColorArray","moduleName","getServerUrl","serverUrl","regionObservable","asObservable","yearObservable","dataPopulationObservable","dailyDisplaynSeasonalObservable","populateColorsArray","get","urlParams","params","i","push","SharedModule","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './shared/services/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'signinorup', pathMatch: 'full' },\n  { path: 'prediction', canActivate: [AuthGuard],\n    loadChildren: () =>\n      import(\n        './prediction/prediction.module'\n      ).then((m) => m.PredictionModule)\n  },\n  { path: 'signinorup',\n    loadChildren: () =>\n      import(\n        './login-register/login-register.module'\n      ).then((m) => m.LoginRegisterModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './login-register/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'WRI_Wave2WebHack';\n\n  constructor(\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.authService.isLoggedIn) {\n      this.router.navigate(['prediction']);\n    }\n  }\n\n}\n","<app-header class=\"page-header\"></app-header>\n<router-outlet></router-outlet>\n<app-footer class=\"page-footer\"></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './login-register/services/auth.service';\nimport { AuthGuard } from './shared/services/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from '../models/user.model';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public userData: any;\n  public disableFlag = false;\n\n  constructor(\n    public afs: AngularFirestore,\n    public afAuth: AngularFireAuth,\n    public router: Router,\n    public ngZone: NgZone\n  ) {\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        console.log(this.userData.email);\n        console.log(this.userData.displayName);\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    });\n  }\n\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['prediction']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message);\n        this.disableFlag = false;\n      });\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.SetUserData(result.user);\n        this.router.navigate(['prediction']);\n      }).catch((error) => {\n        window.alert(error.message);\n        this.disableFlag = false;\n      });\n  }\n\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user !== null ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n      this.ngZone.run(() => {\n          this.router.navigate(['prediction']);\n        });\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error);\n      this.disableFlag = false;\n    });\n  }\n\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName\n    };\n    this.userData = userData;\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['signinorup']);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer-class\">\n    <mat-toolbar-row>\n      <span class=\"class-spacer\"></span>\n      <mat-icon class=\"class-icon\" aria-hidden=\"false\" aria-label=\"class-icon\">help</mat-icon>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/login-register/services/auth.service';\nimport { SharedService } from '../../services/shared.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  yearList: string[] = [];\n\n  constructor(\n    public sharedService: SharedService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.sharedService.getYearlist().subscribe(\n      (response: any) => {\n        this.yearList = response.yearlist;\n      }\n    );\n  }\n\n  onYearChange() {\n    this.sharedService.yearSubject.next(true);\n    this.sharedService.dataPopulationSubject.next(false);\n    this.sharedService.dailyDisplaynSeasonalSubject.next(false);\n  }\n\n}\n","<mat-toolbar class=\"header-class\" color=\"primary\">\n    <mat-toolbar-row>\n      <span>WRI_Wave2WebHack</span>\n      <span class=\"class-spacer\"></span>\n      <mat-form-field *ngIf=\"authService.isLoggedIn\" appearance=\"fill\" class=\"mat-field-class\">\n        <mat-label class=\"mat-label-class\">Select year</mat-label>\n        <mat-select (selectionChange)=\"onYearChange()\" [(value)]=\"sharedService.selectedYear\">\n          <mat-option *ngFor=\"let year of yearList\" [value]=\"year\">\n            {{year}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-icon class=\"class-icon\"\n          *ngIf=\"authService.isLoggedIn\"\n          aria-hidden=\"false\" aria-label=\"class-icon\" (click)=\"authService.SignOut()\">settings_power</mat-icon>\n      <mat-icon class=\"class-icon\"\n          *ngIf=\"authService.isLoggedIn\"\n          aria-hidden=\"false\" aria-label=\"class-icon\">verified_user</mat-icon>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { AuthService } from 'src/app/login-register/services/auth.service';\nimport { SharedService } from '../../services/shared.service';\n\nexport interface RegionModel {\n  regionName: string;\n  color: ThemePalette;\n}\n\n@Component({\n  selector: 'app-side-section',\n  templateUrl: './side-section.component.html',\n  styleUrls: ['./side-section.component.css']\n})\nexport class SideSectionComponent implements OnInit {\n\n  regionList: RegionModel[] = [];\n\n  constructor(\n    private sharedService: SharedService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(this.authService.userData);\n    this.sharedService.getRegionList().subscribe(\n      (response: any) => {\n        this.regionList = response.regionList;\n        this.sharedService.selectedRegion = this.regionList[0].regionName;\n      },\n      error => {\n        this.regionList = [];\n        console.log(error);\n      }\n    );\n  }\n\n  regionSelect(value: string) {\n    this.sharedService.selectedRegion = value;\n    this.sharedService.regionSubject.next(true);\n    this.sharedService.dataPopulationSubject.next(false);\n    this.sharedService.dailyDisplaynSeasonalSubject.next(false);\n  }\n\n}\n","<mat-card class=\"user-card-class\">\n    <mat-card-header>\n        <mat-card-title>User</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <img src=\"../../../../assets/user.png\" height=\"50%\" width=\"50%\">\n        <p *ngIf=\"!!authService.userData.displayName\" class=\"top-para-class para-class\">{{ authService.userData.displayName }}</p>\n        <p *ngIf=\"!authService.userData.displayName\" class=\"top-para-class para-class\">Unknown user</p>\n        <p class=\"para-class\">{{ authService.userData.email }}</p>\n        <p class=\"para-class\">Admin</p>\n    </mat-card-content>\n</mat-card>\n<mat-card class=\"region-card-class\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"region-image-class\"></div>\n        <mat-card-title>Regions</mat-card-title>\n        <mat-card-subtitle>Tanks</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n         <p>\n            Given below is the list of names for the storage tank regions.\n        </p>\n        <mat-chip-list class=\"mat-chip-list-stacked\">\n            <mat-chip *ngFor=\"let object of regionList\" selected [color]=\"object.color\" (click)=\"regionSelect(object.regionName)\">\n                {{object.regionName}}\n            </mat-chip>\n        </mat-chip-list>\n    </mat-card-content>\n    <img class=\"water-image-class\" src=\"../../../../assets/sea.png\" height=\"45px\" width=\"45px\">\n</mat-card>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/login-register/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService\n  ){ }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isLoggedIn) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  public selectedRegion = 'KRS';\n  public selectedYear = '2011 - 2012';\n  public regionSubject: BehaviorSubject<any> = new BehaviorSubject(false);\n  public regionObservable: Observable<any>;\n  public yearSubject: BehaviorSubject<any> = new BehaviorSubject(false);\n  public yearObservable: Observable<any>;\n  public dataPopulationSubject: BehaviorSubject<any> = new BehaviorSubject(false);\n  public dataPopulationObservable: Observable<any>;\n\n  public cumulativeInflowArray: number[] = [];\n  public inflowArray: number[] = [];\n  public outflowArray: number[] = [];\n  public storageArray: number[] = [];\n  public durationArray: any[] = [];\n  public datesArray: any[] = [];\n\n  public yearsPredictedvsActualData: any;\n  public yearsPredictedvsNormalData: any;\n\n  public dailyDisplaynSeasonalSubject: BehaviorSubject<any> = new BehaviorSubject(false);\n  public dailyDisplaynSeasonalObservable: Observable<any>;\n\n  public borderColorArray: string[] = [];\n  public backgroundColorArray: string[] = [];\n\n  moduleName = '/common';\n  getServerUrl = () => environment.serverUrl + this.moduleName;\n\n  constructor(private httpClient: HttpClient) {\n    this.regionObservable = this.regionSubject.asObservable();\n    this.yearObservable = this.yearSubject.asObservable();\n    this.dataPopulationObservable = this.dataPopulationSubject.asObservable();\n    this.dailyDisplaynSeasonalObservable = this.dailyDisplaynSeasonalSubject.asObservable();\n    this.populateColorsArray();\n  }\n\n  getRegionList() {\n    return this.httpClient.get(this.getServerUrl() + '/regionList');\n  }\n\n  getYearlist() {\n    return this.httpClient.get(this.getServerUrl() + '/getYearlist');\n  }\n\n  getDailynSeasonalData() {\n    let urlParams = new HttpParams();\n    urlParams = urlParams.set('region', this.selectedRegion);\n    urlParams = urlParams.set('years', this.selectedYear);\n    return this.httpClient.get(this.getServerUrl() + '/getDailynSeasonalData', {params: urlParams});\n  }\n\n  populateColorsArray() {\n    this.borderColorArray = [\n      'rgba(0, 102, 255',\n      'rgba(153, 51, 255',\n      'rgba(255, 0, 255',\n      'rgba(255, 51, 119',\n      'rgba(255, 26, 26',\n      'rgba(255, 209, 26',\n      'rgba(0, 204, 0',\n      'rgba(0, 204, 153',\n      'rgba(255, 170, 0',\n      'rgba(153, 0, 255'\n    ];\n    for (let i = 0; i < 10; i++) {\n      this.backgroundColorArray.push(this.borderColorArray[i] + ', 0.5)');\n      this.borderColorArray[i] += ')';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SideSectionComponent } from './components/side-section/side-section.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    SideSectionComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatChipsModule,\n    MatSelectModule\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    SideSectionComponent\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  firebase: {\n    apiKey: 'AIzaSyCaFc5oP_sefJAbCdh8J80rLs8L3m3zJ3g',\n    authDomain: 'wri-wave2webhack.firebaseapp.com',\n    projectId: 'wri-wave2webhack',\n    storageBucket: 'wri-wave2webhack.appspot.com',\n    messagingSenderId: '196065919701',\n    appId: '1:196065919701:web:dd94da38623e97ff66185c',\n    measurementId: 'G-SLD3LN3JC2'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}